1.个人主页，采用impress.js的表现层框架进行项目的展示，它主要是是基于css3的过渡与转换，支持画布的无限旋
  转与缩放，css3 3D效果，以及传统ppt的演示，因此会有比较炫酷的演示效果。
2.博客系统：a.博客系统一般是用户进行文章的发表、阅读以及评论交流，项目比较大的情况下，采用的是
            mvc架构：
            1）实现代码的模块化管理。降低代码的耦合性，也有利于后期的维护
            2）同时，由于用户的多样性，控制逻辑和表现层分离，运行程序能够在运行时根据工作流，用户习惯
            或者模型状态，来动态选择不同的用户界面
            b.前端ui和组件主要是采用bootstrap框架，当然，bootstrap自带的12栅格也是实现了响应式布局
            c.后台语言主要是使用php与mysql数据库进行连接     同时使用了php著名的模板引擎smarty


            视图：用户界面    控制器：业务逻辑     模块：数据保存
            1. 用户可以向 View 发送指令（DOM 事件），再由 View 直接要求 Model 改变状态。
            2. 用户也可以直接向 Controller 发送指令（改变 URL 触发 hashChange 事件），再由 Controller 发送给 View。
            3. Controller 非常薄，只起到路由的作用，而 View 非常厚，业务逻辑都部署在 View。所以，Backbone 索性取消了 Controller，只保留一个 Router（路由器） 。

            View 传送指令到 Controller
            Controller 完成业务逻辑后，要求 Model 改变状态
            Model 将新的数据发送到 View，用户得到反馈
3.to do list:vue 与angular
        因为考虑工作计划表是针对私人的计划，采用了在客户端存储数据的方式localStorage，
        没有时间限制，在浏览器关闭之后还能保存，在这两个小作品中，都使用了vuejs 与angularjs的双向数据绑定，
        angular所有的数据和方法都是挂载在$scope上，而vue的数据和方法都是挂载在vue上，
        只是数据挂载在vue的data,方法挂载在vue的methods上，vue使用的json格式书写代码，代码风格更加优雅。
        vuejs是一套构建用户界面的渐进式框架，它的核心包只关注图层，是个轻量级的框架，因此，对于小型的项目vue是个不错的选择




选择 Vue 而不选择 Angular，有下面几个原因，当然不是对每个人都适合：
在 API 与设计两方面上 Vue.js 都比 Angular 简单得多，因此你可以快速地掌握它的全部特性并投入开发。
Vue.js 是一个更加灵活开放的解决方案。它允许你以希望的方式组织应用程序，而不是任何时候都必须遵循 Angular 制定的规则。它仅仅是一个视图层，所以你可以将它嵌入一个现有页面而不一定要做成一个庞大的单页应用。在配合其他库方面它给了你更大的的空间，但相应，你也需要做更多的架构决策。例如，Vue.js 核心默认不包含路由和 Ajax 功能，并且通常假定你在应用中使用了一个模块构建系统。这可能是最重要的区别。
Angular 使用双向绑定，Vue 也支持双向绑定，不过默认为单向绑定，数据从父组件单向传给子组件。在大型应用中使用单向绑定让数据流易于理解。
在 Vue.js 中指令和组件分得更清晰。指令只封装 DOM 操作，而组件代表一个自给自足的独立单元 —— 有自己的视图和数据逻辑。在 Angular 中两者有不少相混的地方。
Vue.js 有更好的性能，并且非常非常容易优化，因为它不使用脏检查。Angular，当 watcher 越来越多时会变得越来越慢，因为作用域内的每一次变化，所有 watcher 都要重新计算。并且，如果一些 watcher 触发另一个更新，脏检查循环（digest cycle）可能要运行多次。 Angular 用户常常要使用深奥的技术，以解决脏检查循环的问题。有时没有简单的办法来优化有大量 watcher 的作用域。Vue.js 则根本没有这个问题，因为它使用基于依赖追踪的观察系统并且异步列队更新，所有的数据变化都是独立地触发，除非它们之间有明确的依赖关系。唯一需要做的优化是在 v-for 上使用 track-by。
有意思的是，Angular 2 和 Vue 用相似的设计解决了一些 Angular 1 中存在的问题。

4.work app:a.公司内部开发使用的work app，主要功能包括行业动态新闻、公司人员通讯录、个人工作备忘以及日志和个人设置
            考虑到用户的局限性，没有大量的用户交互，为了快速开发采用了基于nodejs平台的应用生成器工具express快速创建一个应用的骨架。
            nodejs进行服务器的搭建以及文件接口的配置，
            angularjs主要引用ngrout\，以及双向数据绑定，ngAnimate模块
单入口文件：所有文件一个入口
单页面的应用：发起http请求，通过ajax获取页面